{"version":3,"file":"static/js/639.f91a2d43.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/CaloriesWrap/CaloriesWrap.styled.jsx","components/CaloriesWrap/CaloriesWrap.jsx","components/RegistrationForm/Registration.styled.js","components/CalculatorCalorieForm/CalculatorCalorieForm.styled.js","components/CalculatorCalorieForm/CalculatorCalorieForm.jsx","pages/CalculatorPage/CalculatorPage.jsx","redux/diary/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n    margin: 0 auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    padding: 0 16px;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n","import styled from 'styled-components';\nexport const Section = styled.section`\n  @media screen and (max-width: 479.99px) {\n    width: 90vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: 440px;\n  }\n  @media screen and (max-width: 767.99px) {\n    margin: 0 auto;\n  }\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    margin-top: 60px;\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 60px;\n\n    width: 40%;\n  }\n`;\n\nexport const SectionSummary = styled.section`\n  @media screen and (min-width: 768px) {\n    width: 288px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 400px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(17px);\n  -webkit-backdrop-filter: blur(17px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  color: black;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 10px;\n  @media screen and (min-width: 480px) {\n    padding: 40px;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding: 0px 50px 60px;\n  }\n`;\n\nexport const CaloriesEl = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const CaloriesTitle = styled.h3`\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 60px;\n  }\n`;\nexport const CaloriesTitleFood = styled(CaloriesTitle)`\n  margin-top: 40px;\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 60px;\n  }\n`;\nexport const CaloriesText = styled.p`\n  margin-bottom: 10px;\n`;\n","import { useSelector } from 'react-redux';\nimport { getUserData } from 'redux/auth/authSelectors';\n\nimport { selectSummary } from 'redux/diary/selectors';\nimport {\n  CaloriesEl,\n  CaloriesText,\n  CaloriesTitle,\n  CaloriesTitleFood,\n  Section,\n  SectionSummary,\n  Wrapper,\n} from './CaloriesWrap.styled';\n\nexport const CaloriesWrap = () => {\n  const userSummary = useSelector(selectSummary);\n  const recommendation = useSelector(getUserData);\n\n  const notAllowedProductsFiltered = recommendation?.notAllowedProducts?.slice(\n    0,\n    4\n  );\n\n  return (\n    <Section>\n      <h2 style={{ display: 'none' }}>Summary</h2>\n      <Wrapper>\n        <SectionSummary>\n          <CaloriesTitle>Загалом за сьогодні</CaloriesTitle>\n          <CaloriesEl>\n            <CaloriesText>Залишилось</CaloriesText>\n            <CaloriesText>\n              {userSummary?.kcalLeft ? userSummary.kcalLeft : '000'} kcal\n            </CaloriesText>\n          </CaloriesEl>\n          <CaloriesEl>\n            <CaloriesText>Спожито</CaloriesText>\n            <CaloriesText>\n              {userSummary?.kcalConsumed ? userSummary.kcalConsumed : '000'}{' '}\n              kcal\n            </CaloriesText>\n          </CaloriesEl>\n          <CaloriesEl>\n            <CaloriesText>Денна норма</CaloriesText>\n            <CaloriesText>\n              {userSummary?.dailyRate ? userSummary.dailyRate : '000'} kcal\n            </CaloriesText>\n          </CaloriesEl>\n          <CaloriesEl>\n            <CaloriesText>% від норми</CaloriesText>\n            <CaloriesText>\n              {userSummary?.percentsOfDailyRate\n                ? Math.round(userSummary.percentsOfDailyRate)\n                : '00'}\n              %\n            </CaloriesText>\n          </CaloriesEl>\n        </SectionSummary>\n        <section>\n          <CaloriesTitleFood>Нерекомендована їжа</CaloriesTitleFood>\n          {notAllowedProductsFiltered?.length > 0 ? (\n            notAllowedProductsFiltered.map(prod => {\n              return <CaloriesText key={prod}>{prod}</CaloriesText>;\n            })\n          ) : (\n            <CaloriesText>Ваша дієта буде тут</CaloriesText>\n          )}\n        </section>\n      </Wrapper>\n    </Section>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  min-height: 100vh;\n  background-color: rgba(255, 255, 255, 0.6);\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Content = styled.div`\n  height: 100vh;\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    min-width: 350px;\n    margin-top: 100px;\n    margin-right: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-right: 140px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: Verdana, sans-serif;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n  color: #fc842d;\n\n  @media screen and (min-width: 1280px) {\n    text-align: left;\n  }\n`;\n\nexport const FormBox = styled.form`\n  margin-top: 60px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1280px) {\n    align-items: flex-start;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  height: 36px;\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 280px;\n  height: 36px;\n  padding: 10px 0 10px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: calc(24 / 16);\n  color: #000;\n  border: none;\n  border-bottom: 1px solid #777a83;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n\n  background-color: rgba(255, 255, 255, 0);\n\n  &::placeholder {\n    font: inherit;\n    font-weight: 700;\n    font-size: 14px;\n    color: #777a83;\n  }\n  &:focus {\n    outline: none;\n    border: none;\n    border-bottom: 1px solid #000;\n    color: #000;\n    background-color: transparent;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n  }\n`;\n\nexport const Eye = styled.i`\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #777a83;\n`;\n\nexport const ButtonsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  margin-top: 20px;\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    height: 108px;\n  }\n`;\n\nexport const Button = styled.button`\n  height: 44px;\n  width: 182px;\n  border-radius: 30px;\n  border: 2px solid #fc842d;\n  color: #fc842d;\n  background-color: transparent;\n  font-size: 14px;\n  line-height: calc(17 / 14);\n  font-weight: 700;\n  display: block;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #fc842d;\n    background-color: #fc842d;\n    color: #fff;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 182px;\n  }\n`;\n\nexport const ButtonActive = styled.button`\n  height: 44px;\n  width: 182px;\n  border-radius: 30px;\n  border: 2px solid #fc842d;\n  color: #fff;\n  background-color: #fc842d;\n  font-size: 14px;\n  line-height: calc(17 / 14);\n  font-weight: 700;\n  display: block;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #fc842d;\n    background-color: transparent;\n    color: #fc842d;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 182px;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: #fc842d;\n  &:hover {\n    color: #fff;\n  }\n`;\n\nexport const Error = styled.div`\n  color: red;\n  position: absolute;\n  z-index: 1;\n`;\n\nexport const Ribbon = styled.div`\n  position: relative;\n  border-bottom: 4px solid rgba(252, 132, 45, 0.3);\n  width: 100%;\n  margin-top: 4px;\n  border-radius: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  width: 90vw;\n  font-family: Verdana;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.4;\n  color: #212121;\n  margin-bottom: 40px;\n  text-align: left;\n\n  @media (min-width: 480px) {\n    width: 400px;\n  }\n  @media (min-width: 768px) {\n    font-size: 34px;\n    width: 554px;\n  }\n  @media (min-width: 1280px) {\n    width: 608px;\n  }\n`;\n\nexport const TitleBloor = styled.p`\n  font-family: Verdana;\n  font-weight: bold;\n  cursor: text;\n  font-size: 14px;\n  line-height: 1.2;\n  color: #212121;\n`;\nexport const LabelTitle = styled.p`\n  font-family: Verdana;\n  font-weight: bold;\n  cursor: text;\n  font-size: 14px;\n  line-height: 1.2;\n  color: #212121;\n`;\n\nexport const InputsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-bottom: 32px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 30px;\n    margin-bottom: 60px;\n    margin-top: 20px;\n  }\n`;\n\nexport const InputsLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  @media (min-width: 768px) {\n    gap: 40px;\n  }\n`;\nexport const InputsRight = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  @media (min-width: 768px) {\n    gap: 40px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 90vw;\n  border: none;\n  border-bottom: 1px solid #212121;\n  background-color: transparent;\n  outline: 0;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: #212121;\n  padding-bottom: 10px;\n  transition: all 0.3s;\n\n  /* ::placeholder{\n  font-family: Verdana;\n  font-weight: bold;\n  cursor: text;\n  font-size: 14px;\n  line-height: 1.2;\n  color:  #212121;\n \n  } */\n  @media screen and (min-width: 480px) {\n    width: 400px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 240px;\n  }\n`;\n\nexport const InputRadio = styled.input`\n  width: 20px;\n  height: 20px;\n  border: 1px solid #e0e0e0;\n  background-color: white;\n  -webkit-appearance: none;\n  appearance: none;\n  background-color: #fff;\n  margin: 0;\n  font: inherit;\n  color: #fc842d;\n  width: 22px;\n  height: 22px;\n  border: 1px solid #e0e0e0;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ::before {\n    content: '';\n    width: 0.65em;\n    height: 0.65em;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em #fc842d;\n    background-color: CanvasText;\n  }\n  :checked::before {\n    transform: scale(1);\n  }\n  :focus {\n    outline: 1px solid #e0e0e0;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 210px;\n  height: 43px;\n  padding: 13px 4px;\n  font-family: Verdana;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  color: #ffffff;\n  background-color: #fc842d;\n  box-shadow: 0px 4px 10px 0px #fc842d80;\n  border-radius: 30px;\n  border: transparent;\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  @media (max-width: 767.99px) {\n    margin: 0 auto;\n    margin-bottom: 40px;\n  }\n\n  :hover,\n  :focus {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    transform: scale(1.1);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 32px;\n\n  @media (min-width: 768px) {\n    align-items: flex-start;\n    margin-top: 60px;\n  }\n\n  @media (min-width: 1280px) {\n    width: 608px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const RadioBox = styled.div`\n  display: flex;\n  gap: 24px;\n  justify-content: center;\n`;\nexport const LabelRadio = styled.label`\n  display: flex;\n  gap: 8px;\n  font-family: Jost;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  text-align: left;\n  :checked {\n    color: #fc842d;\n  }\n  :focus-within {\n    color: #fc842d;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dailyCaloriesId } from 'redux/calories/operations';\nimport { selectUserId } from 'redux/auth/authSelectors';\nimport { openModalRecommendation } from 'redux/global/slice';\nimport {\n  LabelTitle,\n  Input,\n  InputRadio,\n  Button,\n  Form,\n  RadioBox,\n  LabelRadio,\n  Title,\n  InputsWrapper,\n  InputsRight,\n  InputsLeft,\n  TitleBloor,\n  Wrapper,\n} from './CalculatorCalorieForm.styled';\nimport { Error } from 'components/RegistrationForm/Registration.styled';\n\nconst schema = yup.object().shape({\n  height: yup\n    .number()\n    .typeError('Повинно бути число')\n    .min(100, 'Мінімальне значення 100 см')\n    .max(220, 'Максимальне значення 220 см')\n    .required(\"Обов'язкове поле\"),\n  age: yup\n    .number()\n    .typeError('Повинно бути число')\n    .min(18, 'Мінімальне значення 18 років')\n    .max(90, 'Максимальне значення 90 років')\n    .required(\"Обов'язкове поле\"),\n  weight: yup\n    .number()\n    .typeError('Повинно бути число')\n    .min(45, 'Мінімальне значення 45 кг')\n    .max(200, 'Максимальне значення 200 кг')\n    .required(\"Обов'язкове поле\"),\n  desiredWeight: yup\n    .number()\n    .typeError('Повинно бути число')\n    .min(40, 'Мінімальне значення 40 кг')\n    .max(200, 'Максимальне значення 200 кг')\n    .required(\"Обов'язкове поле\"),\n  bloodType: yup.number().required(\"Обов'язкове поле\"),\n});\n\nconst CalculatorCalorieForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n\n  const onSubmit = data => {\n    dispatch(dailyCaloriesId({ ...data, userId }));\n  };\n\n  const openModal = () => {\n    dispatch(openModalRecommendation());\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <Wrapper>\n        <Title>Розрахуйте свою денну норму калорій прямо зараз</Title>\n        <InputsWrapper>\n          <InputsLeft>\n            <LabelTitle>\n              <Input\n                type=\"number\"\n                {...register('height')}\n                placeholder=\"Зріст *\"\n              />\n            </LabelTitle>\n            {errors?.height && (\n              <Error style={{ top: '33%' }}>{errors.height.message}</Error>\n            )}\n            <LabelTitle>\n              <Input type=\"number\" {...register('age')} placeholder=\"Вік *\" />\n            </LabelTitle>\n            {errors?.age && (\n              <Error style={{ top: '33%' }}>{errors.age.message}</Error>\n            )}\n            <LabelTitle>\n              <Input\n                type=\"number\"\n                {...register('weight')}\n                placeholder=\"Теперішня вага *\"\n              />\n            </LabelTitle>\n            {errors?.weight && (\n              <Error style={{ top: '33%' }}>{errors.weight.message}</Error>\n            )}\n          </InputsLeft>\n          <InputsRight>\n            <LabelTitle>\n              <Input\n                type=\"number\"\n                {...register('desiredWeight')}\n                placeholder=\"Бажана вага *\"\n              />\n            </LabelTitle>\n            {errors?.desiredWeight && (\n              <Error style={{ top: '33%' }}>\n                {errors.desiredWeight.message}\n              </Error>\n            )}\n            <TitleBloor> Група крові * </TitleBloor>\n\n            <RadioBox>\n              <LabelRadio>\n                <InputRadio\n                  {...register('bloodType', { required: true })}\n                  type=\"radio\"\n                  value=\"1\"\n                />\n                1\n              </LabelRadio>\n              <LabelRadio>\n                <InputRadio\n                  {...register('bloodType', { required: true })}\n                  type=\"radio\"\n                  value=\"2\"\n                />\n                2\n              </LabelRadio>\n              <LabelRadio>\n                <InputRadio\n                  {...register('bloodType', { required: true })}\n                  type=\"radio\"\n                  value=\"3\"\n                />\n                3\n              </LabelRadio>\n              <LabelRadio>\n                <InputRadio\n                  {...register('bloodType', { required: true })}\n                  type=\"radio\"\n                  value=\"4\"\n                />\n                4\n              </LabelRadio>\n            </RadioBox>\n            {errors?.bloodType && (\n              <Error style={{ top: '33%' }}>{errors.bloodType.message}</Error>\n            )}\n          </InputsRight>\n        </InputsWrapper>\n      </Wrapper>\n      <Button type=\"submit\" onClick={openModal}>\n        Почніть худнути\n      </Button>\n    </Form>\n  );\n};\n\nexport default CalculatorCalorieForm;\n","import { Container } from 'components/App/App.styled';\nimport CalculatorCalorieForm from 'components/CalculatorCalorieForm/CalculatorCalorieForm';\n\nimport { CaloriesWrap } from 'components/CaloriesWrap/CaloriesWrap';\n\n// import { useMediaQuery } from 'react-responsive';\n\nconst CalculatorPage = () => {\n  return (\n    <Container>\n      <CalculatorCalorieForm />\n      <CaloriesWrap />\n    </Container>\n  );\n};\n\nexport default CalculatorPage;\n","export const selectProducts = state => state.products.productsData;\nexport const selectDayData = state => state.products.dayData;\nexport const selectDate = state => state.products.date;\nexport const selectUserInfo = state => state.products.userInfo;\nexport const selectEatenProducts = state => state.products.eatenProducts;\nexport const selectDayId = state => state.products.dayId;\nexport const selectItemId = state => state.products.itemId;\nexport const selectSummary = state => state.products.summary;\nexport const selectPage = state => state.products.page;\nexport const selectPerPage = state => state.products.perPage;\n"],"names":["Container","styled","Section","SectionSummary","Wrapper","CaloriesEl","CaloriesTitle","CaloriesTitleFood","CaloriesText","CaloriesWrap","userSummary","useSelector","selectSummary","recommendation","getUserData","notAllowedProductsFiltered","notAllowedProducts","slice","style","display","kcalLeft","kcalConsumed","dailyRate","percentsOfDailyRate","Math","round","length","map","prod","Content","Title","FormBox","Label","Input","Eye","ButtonsList","Button","ButtonActive","StyledNavLink","NavLink","Error","Ribbon","TitleBloor","LabelTitle","InputsWrapper","InputsLeft","InputsRight","InputRadio","Form","RadioBox","LabelRadio","schema","yup","shape","height","typeError","min","max","required","age","weight","desiredWeight","bloodType","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","dispatch","useDispatch","userId","selectUserId","onSubmit","data","dailyCaloriesId","autoComplete","type","placeholder","top","message","value","onClick","openModalRecommendation","selectProducts","state","products","productsData","selectDate","date","selectEatenProducts","eatenProducts","selectDayId","dayId","summary","selectPage","page","selectPerPage","perPage"],"sourceRoot":""}